Introduction
'jaxartes-misc' is a collection of open source programs.  Most are
command line utilities by Jeremy Dilatush published under the BSD license
for Linux and other POSIX-compatible systems.
This file, "jaxartes-misc.txt" provides basic documentation about each
one.  See the individual files for more details.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program: "timedumper"
Function:
    Dumps some stuff to standard output continuously.  Mostly it's just
    for filler.  The contents are:
        a line count
        current time stamp
        24-bit linear feedback shift register (LFSR)
        64-bit linear feedback shift register (LFSR)
Files:
    timedumper.c - source code
Compiling:
    cc -Wall -o timedumper timedumper.c
Running:
    Run on the command line as "timedumper".  When you're tired of it,
    stop it with control-C.
    It takes a few options:
        -c -- color output
        -q -- try to only use about 25% of a CPU, by taking breaks
History:
    Started writing in June 2013, with enhancements in 2013, 2014, and 2019.
    Added to "jaxartes-misc" package, July 2020.
Compatibility:
    Mostly tested on macOS.  Should also be fine on Linux and various
    other systems.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
Program: "tty-clock"
Function:
    Draws a clock and calendar within the terminal window.
Files:
    tty-clock.c - source code
    tty-clock-ftctest.py - analyze some of the test output
Compiling:
    cc -Wall -o tty-clock tty-clock.c -lm -lcurses
    or, if that gives you trouble try:
    cc -Disfinite=finite -Wall -o tty-clock tty-clock.c -lm -lcurses
Running:
    Run on the command line as "tty-clock".  When you're tired of it,
    stop it with control-C.
    Takes a few options.  If you run it with the "-\?" option it'll show
    you what these options are.
History:
    Written in June and July 2020.  Added to "jaxartes-misc" package,
    July 2020.
Compatibility:
    Tested on macOS and Raspbian Linux.
    Should also be fine in most modern POSIX environments.
    Regarding the "-H" (halftone) option: On many terminals it doesn't work
    well, so it's not the default.  But on one (VT52) "-H" works
    while the default does not.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Program: "tvalentine"
Function:
    Really a toy.  Maybe of interest when "tty-clock" shows February 14.
Files:
    tvalentine.c - source code
    tvalentine_gen.py - used to generate a bitmap included in tvalentine.c
Compiling:
    cc -Wall -o tvalentine tvalentine.c -lcurses
Running:
    Run on the command line as "tvalentine".  Run within a terminal that
    can do color.  Most can, nowadays.  When you're tired of it,
    stop it with control-C or with "q".
History:
    Written in July 2020.
Compatibility:
    Tested on macOS and Linux.
    Should also be fine in most modern POSIX environments.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Program: "vic20-ffractal"
Function:
    Displays a certain kind of fractal image on the VIC-20, a small computer
    from the early 1980s.  Change fractals with a keypress.
Files:
    vic20-ffractal.prg - pre-compiled binary for VIC-20
    c64-ffractal.prg - pre-compiled binary for Commodore 64
    vic20-ffractal.asm - source code
    vic20-ffractal.mk - Makefile (to build it)
    srec2prg.tcl - part of the build process
Compiling, running:
    See the top of vic20-ffractal.asm for instructions.
History:
    Written in May 2021.
Compatibility:
    Tested in VICE emulator, emulating VIC-20.
    Most normal VIC-20 variations: NTSC and PAL, unexpanded and 3k and 8k
    expanded.  Also ported to Commodore 64.

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

